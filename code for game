#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>

char board [3][3];
const char player = 'X';
const char computer = 'O';

void resetboard();
void printboard();
int checkfreespaces();
void playermove();
void computermove();
char checkwinner();
void printwinner(char);

int main()
{
    char winner = ' ';
    char response;
    

    do
    {
      winner = ' ';
      response = ' ';

      resetboard();

    while(winner == ' ' && checkfreespaces() != 0)
    {
    printboard();
    playermove();
    
    winner = checkwinner();
    if(winner != ' ' || checkfreespaces() == 0)
    {
      break;
    }

    computermove();
    if(winner != ' ' || checkfreespaces() == 0)
    {
      break;
    }
    }

    printboard();
    printwinner(winner);

    printf("\nwould you like to play again? (Y/N): ");
    scanf("%c");
    scanf(" %c", &response);
    response = toupper(response);

    }while (response == 'Y');

    printf("thanks for playing!");
    
    return 0;
}

void resetboard()
{
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
      {
        board[i][j] = ' ';
      }
    }
}

void printboard()
{
    printf(" %c | %c | %c", board[0][0], board[0][1], board[0][2]);
    printf("\n---|---|---\n");
    printf(" %c | %c | %c", board[1][0], board[1][1], board[1][2]);
    printf("\n---|---|---\n");
    printf(" %c | %c | %c", board[2][0], board[2][1], board[2][2]);
}

int checkfreespaces()
{
  int freespaces = 9;

  for(int i = 0; i < 3; i++)
  {
    for(int j = 0; j < 3; j++)
   {
      if (freespaces = ' ')
      {
        freespaces--;
      }

   }
  }
  return freespaces;
}

void playermove()
{
  int x;
  int y;

  do{
    printf("\nEnter row #(1-3): ");
    scanf("%d", &x);
    x--;

    printf("\nEnter column #(1-3): ");
    scanf("%d", &y);
    y--;

    if (board[x][y] != ' ')
    {
      printf("invalid move");
    }
    else
    {
      board[x][y] = player;
      break;
    }}
    while(board[x][y] != ' ');
}

char checkwinner()
{
  //check rows
  for(int i = 0; i < 3; i++)
  {
    if (board[i][0] == board[i][1] && board[i][0] == board[i][2])
    {
      return board[i][0];
    }
  }
  //check columns
  for(int i = 0; i < 3; i++)
  {
    if (board[0][i] == board[1][i] && board[0][i] == board[2][i])
    {
      return board[0][i];
    }
  }
  //check diagonals
  if (board[0][0] == board[1][1] && board[0][0] == board[2][2])
    {
      return board[0][0];
    }
  if (board[0][2] == board[1][1] && board[0][2] == board[2][0])
    {
      return board[0][2];
    }
  
  return ' ';
}

void computermove()
{
  // creates a seed based on current time
  srand(time(0));

  int x;
  int y;

  if(checkfreespaces() > 0)
  {
    do
    {
      x = rand() % 3;
      y = rand() % 3;
    } while (board[x][y] != ' ');

    board[x][y] = computer;
    
  }
  else
  {
    printwinner(' ');
  }
}

void printwinner(char winner)
{
  if(winner == player)
  {
    printf("\nyou win!");
  }
  else if(winner == computer)
  {
    printf("\nyou lose!");
  }
  else
  {
    printf("\nit's a tie!");
  }
}
